// ConsoleApplication2.cpp: определяет точку входа для консольного приложения.
//
 
/**
Составить программу, которая преобразует одномерный
целочисленный массив так, чтобы все его элементы содержащие
нечётные числа остались на своих местах, а все его элементы
содержащие чётные числа расположились в обратном порядке.
Вывести одной строкой элементы исходного и преобразованного
массива.
*/
 
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <conio.h>
 
int main()
{

    const int sizeArray = 10;
    int oldArray[sizeArray];
    int newArray[sizeArray];
 
    // Инициализация элементов массива вводом с клавиатуры
    for(int i = 0; i < sizeArray; i++) {
        printf("Введите элемент массива: ");
        scanf("%d", &oldArray[i]); // иниициализация исходного массива
        newArray[i] = oldArray[i]; // инициализация нового массива для последующей замены элементов
    }
    int j = sizeArray-1;
    int k = 0;
    int temp = 0;
 
    for(; k < sizeArray; k++) { // заходим в исходный массив
        if(k == j) break; // если индексы равны, значит мы попали в середину, делаем выход
        if(!(oldArray[k] % 2)) { // проверка на четность
            for(; j >= 0; j--) { // заходим в массив с конца
                if(!(oldArray[j] % 2)) { // проверка на четность
                    temp = oldArray[j]; // сохранение значения во временную переменную
                    newArray[j] = oldArray[k]; // замена последнего элемента 
                    newArray[k] = temp; // замена первого элемента
                    j--; // декремент, чтобы не попасть на этот индекс снова
                    break; // выход, чтобы не проходить по циклу еще раз, тк мы меняем местами два значения
                }
            }
        }
    }
 
    //Вывод исходного и преобразованного массивов в одну строку
    printf("\n\nИсходный массив: ");
    for(int k = 0; k < sizeArray; k++) {
        printf("%d ", oldArray[k]);
        if(k==9) 
            printf("; ");
    }
 
    printf("преобразованный массив: ");
    for(int l = 0; l < sizeArray; l++) 
        printf("%d ", newArray[l]);
 
    getch();
    return 0;
}