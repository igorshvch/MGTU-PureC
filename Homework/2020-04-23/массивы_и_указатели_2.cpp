#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <conio.h>

/*
Написать программу, которая преобразует одномерный 
целочисленный массив так, чтобы все его чётные элементы 
разместились в начале массива, а нечётные в конце.
Задачу надо решить без использования дополнитнльных
массивов
*/

/*
В качестве примера целочисленного массива используется вводимое пользователем число.
Цифры, укзаывающие его разряды, записываются в отдельные ячеки массива,
который в дальнешем преобразуется согласно заданию
*/

int main()
{
    int a, tmp; //переменные для хранения вводимого числа и промежуточных значений
    int array_len(0), j(0), k(0); //счетчики
    int power_var(1); /*
                      переменная для возведения числа в сетпень
                      (используется для вычисления длины массива,
                      хранящего значения разрядов)
                      */
    int *store(NULL); //указатель для выделения массива
    
    printf("=============================\n");
    printf("Input integer\n");
    scanf("%d", &a);
    printf("Your input is:\n\ta = %d\n", a);
    printf("=============================\n");

    //Выделение памяти под массив необходимой длины для хранения цифр в разрядах чисел

    for (array_len=0; a!=(a%power_var); array_len++, power_var *= 10); //подсчет необходимого количества ячеек в массиве по максимальному введенному значению
    store = (int*) calloc(array_len, sizeof(int)); //выделение памяти для массива
    
    printf("Array length: %d\n", array_len);
    
    //Поразрядная запись числа в массив

    j = array_len-1; //приведение счетчика к последней позиции массива
    do //цикл заполнения массива
        {
            tmp = a%10;
            *(store+j) = tmp;
            j--;
        }
    while (a/=10); //окончание цикла заполнения массива

    for (j=0; j < array_len; j++) //цикл печати значений внутри массива для тестирования
        {
            printf("%d ", *(store+j));
        } //окончанине цикла печати для тестирования
    printf("\n");
    printf("=============================\n");
        
    k = -1; //разделитель первой части массива, в которой помещаются все четные числа, и второй, в которой помещаются нечетные
    for (j=0; j < array_len; j++)
        {
            if (!(*(store+j)%2)) //логика перемещения четного числа в первую часть массива
                {
                    tmp = *(store+j);
                    *(store+j) = *(store+(k+1));
                    *(store+(k+1)) = tmp;
                    k++;
                }
        }

    printf("Output:\n");
    for (j=0; j < array_len; j++) //цикл печати значений внутри массива для тестирования
        {
            printf("%d ", *(store+j));
        } //окончанине цикла печати для тестирования
    printf("\n");

    free( (void*) store); //освобождение памяти, выделенной под массив

    getch();
	return 0;
}
