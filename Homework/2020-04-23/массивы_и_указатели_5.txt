#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <conio.h>

/*
Ќаписать программу, котора€ преобразует одномерный 
целочисленный массив так, чтобы все его чЄтные элементы 
разместились в начале массива, а нечЄтные в конце.
«адачу надо решить без использовани€ дополнитнльных
массивов
*/

/*
¬ качестве примера целочисленного массива используетс€ вводимое пользователем число.
÷ифры, укзаывающие его разр€ды, записываютс€ в отдельные €чеки массива,
который в дальнешем преобразуетс€ согласно заданию
*/

int main()
{
    int a, tmp; //переменные дл€ хранени€ вводимого числа и промежуточных значений
    int array_len(0), j(0), k(0); //счетчики
    int power_var(1); /*
                      переменна€ дл€ возведени€ числа в сетпень
                      (используетс€ дл€ вычислени€ длины массива,
                      хран€щего значени€ разр€дов)
                      */
    int *store(NULL); //указатель дл€ выделени€ массива
    
    printf("=============================\n");
    printf("Input integer\n");
    scanf("%d", &a);
    printf("Your input is:\n\ta = %d\n", a);
    printf("=============================\n");

    //¬ыделение пам€ти под массив необходимой длины дл€ хранени€ цифр в разр€дах чисел

    for (array_len=0; a!=(a%power_var); array_len++, power_var *= 10); //подсчет необходимого количества €чеек в массиве по максимальному введенному значению
    store = (int*) calloc(array_len, sizeof(int)); //выделение пам€ти дл€ массива
    
    printf("Array length: %d\n", array_len);
    
    //ѕоразр€дна€ запись числа в массив

    j = array_len-1; //приведение счетчика к последней позиции массива
    do //цикл заполнени€ массива
        {
            tmp = a%10;
            *(store+j) = tmp;
            j--;
        }
    while (a/=10); //окончание цикла заполнени€ массива

    for (j=0; j < array_len; j++) //цикл печати значений внутри массива дл€ тестировани€
        {
            printf("%d ", *(store+j));
        } //окончанине цикла печати дл€ тестировани€
    printf("\n");
    printf("=============================\n");
        
    k = -1; //разделитель первой части массива, в которой помещаютс€ все четные числа, и второй, в которой помещаютс€ нечетные
    for (j=0; j < array_len; j++)
        {
            if (!(*(store+j)%2)) //логика перемещени€ четного числа в первую часть массива
                {
                    tmp = *(store+j);
                    *(store+j) = *(store+(k+1));
                    *(store+(k+1)) = tmp;
                    k++;
                }
        }

    printf("Output:\n");
    for (j=0; j < array_len; j++) //цикл печати значений внутри массива дл€ тестировани€
        {
            printf("%d ", *(store+j));
        } //окончанине цикла печати дл€ тестировани€
    printf("\n");

    free( (void*) store); //освобождение пам€ти, выделенной под массив

    getch();
	return 0;
}
